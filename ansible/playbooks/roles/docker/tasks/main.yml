
- name: Install prerequisites for Docker
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present
    update_cache: yes
  become: yes

- name: Add Docker GPG key
  ansible.builtin.apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: yes

- name: Add Docker APT repository
  ansible.builtin.apt_repository:
    repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
    state: present
  become: yes

- name: Install Docker CE packages
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
    state: present
    update_cache: yes
  become: yes

# 1
- name: Start and enable Docker service
  ansible.builtin.service:
    name:  docker 
    state: started
    enabled: yes
  become: yes

#2
- name: Ensure(create) Docker group exists
  ansible.builtin.group:
    name: docker
    state: present
  become: yes

#3
- name: Add current user to Docker group
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes 
  become: yes

- name: Create Docker CLI plugin directory
  ansible.builtin.file:
    path: /usr/local/lib/docker/cli-plugins
    state: directory
    mode: '0755'
  become: yes

- name: Download Docker Compose v2 plugin
  ansible.builtin.get_url:
    url: https://github.com/docker/compose/releases/download/v2.22.0/docker-compose-linux-x86_64
    dest: /usr/local/lib/docker/cli-plugins/docker-compose
    mode: '0755'
  become: yes

- name: Get ECR login token
  shell: |
    aws ecr get-login-password --region {{ aws_region }} 
  register: ecr_token

- name: Debug ECR Token
  debug: 
    var: ecr_token

- name: Login into ECR registry
  community.docker.docker_login:
    registry_url: "{{ aws_account_id }}.dkr.ecr.{{ aws_region }}.amazonaws.com"
    username: AWS
    password: "{{ ecr_token.stdout }}"
    reauthorize: yes
  register: docker_login_result

- name: Debug ECR Token
  debug: 
    var: docker_login_result

- name: Pull latest Backend image
  docker_image:
    name: "{{ backend_ecr_uri }}:latest"
    source: pull
    force_source: yes




